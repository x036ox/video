version: '3'

networks:
  local:

services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "80:80"
    depends_on:
      - "video-api"
      - "yout"
    networks:
      - local

  yout:
    image: artur110/yout
    build: 
      context: ./yout
    networks:
      - local

  video-api:
    image: artur110/yout-back
    build: 
      context: ./video-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
      - minio
      - media-processor
      - auth-server
      - notifications
      - recommendations
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - local

  auth-server:
    image: artur110/auth-server
    build: 
      context: ./video-api
    restart: unless-stopped
    environment:
      - SPRING_ACTIVE_PROFILES=prod
    ports:
      - "8090:8090"
    depends_on:
      - db
    networks:
      - local

  media-processor:
    image: artur110/media-processor
    build: 
      context: ./media-processor
    restart: unless-stopped
    ports:
      - "8083:8081"
    depends_on:
      - kafka
      - minio
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - local

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - "/src/main/resources/redis.conf:/usr/local/etc/redis/redis.conf"
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - local

  db:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: adminadmin
      MYSQL_DATABASE: yout
    ports:
      - "3307:3306"

  notifications:
    image: artur110/notifications
    build: 
      context: ./notifications
    restart: unless-stopped
    depends_on:
      - kafka
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - local

  recommendations:
    image: artur110/recommendations
    build: 
      context: ./recommendations
    restart: unless-stopped
    ports:
      - "8010:8010"
    depends_on:
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - local

  zookeeper:
    image: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    networks:
      - local

  minio:
    image: 'bitnami/minio:latest'
    restart: unless-stopped
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
    networks:
      - local

  kafka:
    image: bitnami/kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
    depends_on:
      - zookeeper
    networks:
      - local